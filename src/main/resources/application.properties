## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir= D://Angular MicroServices Project//DBImages
server.port = 8082
spring.data.mongodb.database=Vendorconfiguration_EAP_Services
  
  #logging.level.org.org.org.springframework.boot.web=debug
  
  #log4j.rootLogger=DEBUG
  
  
 logging.level.org.springframework=ERROR

  #logging.level.org.springframework=FATAL
 # logging.level.org.springframework=WARN
 # logging.level.org.springframework=DEBUG
#logging.level.com.howtodoinjava=DEBUG
 
#output to a temp_folder/file
#logging.file=${java.io.tmpdir}/application.log
 
# Logging pattern for the console
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n
 
# Logging pattern for file
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%
  
  
logging.file: D://Angular MicroServices Project//DBImages/application.log
# To customize logging pattern.
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36}- %msg%n"